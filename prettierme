#!/usr/bin/env bash

if [ "$1" == "--version" ]; then
	echo "v4.0.0"
	exit 0;
fi

if [ "$1" == "--help" ]; then
	echo "prettierme [options] [file.js]

Options:
  --help    Show this help menu
  --version Prints version number"
	exit 0;
fi

# figures out the path to prettierd executable
function findprettierd() {
	source="${BASH_SOURCE[0]}"
	while [ -h "$source" ]; do
		currdir="$( cd -P "$( dirname "$source" )" && pwd )"
		source="$(readlink "$source")"
		[[ $source != /* ]] && source="$currdir/$source"
	done
	currdir="$( cd -P "$( dirname "$source" )" && pwd )"
	globalbin="$(npm bin -g)"
	localbin="$(npm bin)"
	if hash prettierd 2>/dev/null; then
		# use global prettierd install
		echo prettierd
	elif [ -e "$globalbin/prettierd" ]; then
		# use global-installed npm binary
		echo "$globalbin/prettierd"
	elif [ -e "$localbin/prettierd" ]; then
		# use local-installed npm binary
		echo "$localbin/prettierd"
	elif [ -e "$currdir/node_modules/@fsouza/prettierd/bin/prettierd.js" ]; then
		# nested install
		echo "$currdir/node_modules/@fsouza/prettierd/bin/prettierd.js"
	else
		# nested install ?
		echo "$currdir/../@fsouza/prettierd/bin/prettierd.js"
	fi
}

# forwards prettierd commands
if [ "$1" == "stop" ]; then
	prettierexec="$(findprettierd)"
	"$prettierexec" stop
	exit 0;
fi
if [ "$1" == "start" ]; then
	prettierexec="$(findprettierd)"
	"$prettierexec" start
	exit 0;
fi
if [ "$1" == "status" ]; then
	prettierexec="$(findprettierd)"
	"$prettierexec" status
	exit 0;
fi
if [ "$1" == "restart" ]; then
	prettierexec="$(findprettierd)"
	"$prettierexec" restart
	exit 0;
fi

# gets the port of prettierd running server
prettierddata=$(cat ~/.prettierd 2> /dev/null)
prettierdport="$(echo $prettierddata | cut -d ' ' -f 1)"
prettierdtoken="$(echo $prettierddata | cut -d ' ' -f 2)"

# if the server isn't running starts it and get the port
if [ -z "$prettierddata" ]; then

	prettierexec="$(findprettierd)"

	# starts the prettierd server
	"$prettierexec" start
	sleep 0.1
	prettierddata=$(cat ~/.prettierd)
	prettierdport=$(echo $prettierddata | cut -d ' ' -f 1)
	prettierdtoken=$(echo $prettierddata  | cut -d ' ' -f 2)
fi

if nc 2>&1 | grep -- -q >/dev/null; then
  NC_OPTIONS="-q 0"
else
  NC_OPTIONS=""
fi

# uses netcat to lint the file
res=$(echo "$prettierdtoken $PWD --stdin" | cat - "$1" | nc $NC_OPTIONS 127.0.0.1 "$prettierdport")
if [ $(echo "$res" | tail  -1) != "# exit 1" ]; then
	echo "$res" > "$1"
fi

